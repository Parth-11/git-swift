name: Build and Package

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    continue-on-error: true  # Allow other matrix jobs to continue if one fails
    strategy:
      fail-fast: false  # Don't fail all jobs if one fails
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            package_type: deb
          - os: windows-latest
            target: x86_64-pc-windows-gnu
            package_type: windows
          - os: macos-latest
            target: x86_64-apple-darwin
            package_type: mac

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}

      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y dpkg-dev libssl-dev

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install openssl@3 rustup-init pkg-config
          echo "OPENSSL_DIR=$(brew --prefix openssl@3)" >> $GITHUB_ENV
          echo "MACOSX_DEPLOYMENT_TARGET=10.12" >> $GITHUB_ENV

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install wixtoolset -y
          choco install openssl -y

      - name: Build Rust project
        run: cargo build --release --target ${{ matrix.target }} --manifest-path app/Cargo.toml
        env:
          PKG_CONFIG_ALLOW_CROSS: 1

      - name: Package Debian (.deb)
        if: matrix.package_type == 'deb'
        run: |
          cargo install cargo-deb --force
          cargo deb --target ${{ matrix.target }} --manifest-path app/Cargo.toml
        env:
          DEB_BUILD_OPTIONS: nocheck

      - name: Package Windows (.exe/.msi)
        if: matrix.package_type == 'windows'
        run: |
          cargo install cargo-wix --force
          cd app
          cargo wix init
          cargo wix --release --target ${{ matrix.target }}
        shell: bash

      - name: Package macOS (.dmg)
        if: matrix.package_type == 'mac'
        run: |
          cargo install cargo-bundle --force
          cargo bundle --release --target ${{ matrix.target }} --manifest-path app/Cargo.toml
        env:
          BUNDLE_ID: com.singhropar.gitswift
          BUNDLE_NAME: gitswift
          MACOSX_DEPLOYMENT_TARGET: 10.12
          OPENSSL_DIR: ${{ env.OPENSSL_DIR }}
          OPENSSL_LIB_DIR: ${{ env.OPENSSL_DIR }}/lib
          OPENSSL_INCLUDE_DIR: ${{ env.OPENSSL_DIR }}/include

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packages-${{ matrix.os }}
          path: |
            app/target/${{ matrix.target }}/release/*.deb
            app/target/wix/msi/*.msi
            app/target/release/bundle/dmg/*.dmg
